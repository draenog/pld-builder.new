- Write spec preprocessor, that processes given spec file and expands
  macros. Next we should process the output, look for all BuildRequires:
  lines, and install them, instead of running rpmbuild --nobuild to see
  what's missing, since it chokes when stuff is used in %(...), on missing
  includes and so on. 
  
  get_br.py is close, but doesn't handle:
    %if foo
    BuildRequires: ...
    %endif
  which in fact requires expression parser :<

- implement: 
    <command type='shell' id='...'>shell code</command>
    <command type='upgrade' id='...' /> (run poldek --up; poldek -Q --shcmd 'upgrade -G *')
  First requires command-shell:<builder>, second command-upgrade:<builder>.
  This should be class in requester.py, with kind='command', also look for
  kind checking elsewhere in the code (grep for 'kind.*group')

- store requester email in request, after checking priviliges, so rpm_builder
  need not have all users in his acl.conf, only srpm_builder user, with priv
  to sign queue.

- make default configs reasonable

- fix make-request.sh to be more user-friendly and configurable

- add possibility of tagging stuff for source builder

- if magic comment found in spec: single-build -- aquire all job-slots

- allow blocking some packages

- fetch src.rpm once for all builders on this account, separate fetching 
  src.rpms, so we can build and fetch at the same time

- unify buildlogs.py and ftp.py, both are file queues
