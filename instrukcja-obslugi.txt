Instrukcja instalacji.

1. Konta

Builder potrzebuje konta na swoje potrzeby. Konto powinno byæ wspólne
dla wszystkich builderów buduj±cych pakiety binarne na danych ho¶cie,
co pozwala na lepsze wykorzystanie zasobów (hint: zmienna job_slots 
w konfiguracji). 

SRPMS builder powinien jednak staæ na osobnym koncie.

Konta bêdziemy nazywaæ bin_builder oraz srpms_builder.

2. Wymagania

oba:
  wysy³anie poczty
  gpg
  scp i/lub rsync (wysy³anie buildlogów i plików na ftp)
  dostêp do odpowiednich chrootów

srpms_builder:
  skrzynka pocztowa + procmail
  mo¿liwo¶æ serwowania plików po http
  po³±czenia cvs
  po³±czenia ftp lub http (distfiles)

bin_builder:
  po³±czenia http

dostêp do chrootów przez sudo, wpisy sudoers:

srpms_builder ALL = NOPASSWD: \
  /usr/sbin/chroot /path/to/chroot *
  
bin_builder ALL = NOPASSWD: \
  /usr/sbin/chroot /path/to/chroot1 *, \
  /usr/sbin/chroot /path/to/chroot2 *

3. instalacja skryptów

Skrypty *musz±* byæ w ~/pld-builder.new/, checkoutniête z CVS.

4. instalacja kolejek etc.

cd ~/pld-builder.new
./admin/fresh-queue.sh y

5. konfiguracje chrootów

poldek.conf:

source = local,pri=1 /spools/ready/
source = main-test,noauto,pri=2 ftp://ftp.pld-linux.org/dists/ac/test/athlon/
source = main-ready,pri=3 ftp://ftp.pld-linux.org/dists/ac/ready/athlon/
source = main-ug,pri=4 ftp://ftp.pld-linux.org/dists/ac/updates/general/athlon/
source = main-us,pri=5 ftp://ftp.pld-linux.org/dists/ac/updates/security/athlon/
source = main,pri=6 ftp://ftp.pld-linux.org/dists/ac/PLD/athlon/RPMS/
particle_install = no
greedy = yes
rpmdef = _excludedocs 1
cachedir = /spools/poldek/
keep_downloads = yes

Pakiety preinstalowane:

bin_builder:
  rpm-build poldek shadow net-tools which

srpms_builder:
  bin_builder+
  cvs wget rpm-perlprov rpm-php-pearprov rpm-pythonprov

oba: user builder

oba: ~builder/rpm/{SPECS,SOURCES,RPMS,SRPMS,BUILD}

srpms_builder dodatkowo musi mieæ SPECS i SOURCES checkoutniête z CVS,
w SPECS musi mieæ builder, additional-md5sums i mirrors.

oba: katalogi /spools/poldek/ /spools/ready/

Wszystko to robi automagicznie admin/install-chroot.sh

[[...]]


100. cron jobs

srpms_builder:
  src-builder.sh
  file-sender.sh

bin_builder:
  request-fetcher.sh
  load-balancer.sh
  file-sender.sh

Poza tym *bardzo* dobrym pomys³em jest wywo³ywanie dla ka¿dego buildera
tmpwatcha. Powinno to wygl±daæ mniej wiêcej tak:
5 3 * * * sudo chroot $HOME/chroots/chroot-i686/ tmpwatch -m 200 /spools/ready/
(autentyczny przyk³ad). Oczywi¶cie trzeba taki wpis ustawiæ dla ka¿dego
chroota znajduj±cego siê na koncie, a wewn±trz musi byæ zainstalowany tmpwatch.
W przeciwnym przypadku trzeba to czy¶ciæ rêcznie.

Przyk³ad dla bin buildera:
* * * * * $HOME/pld-builder.new/bin/request-fetcher.sh
* * * * * $HOME/pld-builder.new/bin/load-balancer.sh
* * * * * $HOME/pld-builder.new/bin/file-sender.sh
30 3 * * * $HOME/pld-builder.new/bin/maintainer.sh

Przyk³ad dla src buildera:
* * * * * $HOME/pld-builder.new/bin/src-builder.sh
* * * * * $HOME/pld-builder.new/bin/file-sender.sh
30 3 * * * $HOME/pld-builder.new/bin/maintainer.sh

101. procmail

srpms_builder:

:0
* ^X-New-PLD-Builder:
|~/pld-builder.new/bin/request-handler.sh

:0
!admin@somehere

bin_builder

:0
!admin@somwhere

102. httpd

Katalog ~/pld-builder.new/www/ z konta srpm_builder musi byæ dostêpny po
http pod url podanym jako control_url w konfiguracji bin-builderów.

103. src builder

Automatyka potrafi przesy³aæ informacje (notify) pomiêdzy bin-builderami,
a src-builderami za pomoc± emaila lub za pomoc± HTTP POST.

W celu u¿ycia metody HTTP POST nale¿y po stronie src_buildera uruchomiæ:
./request_handler_server.py
natomiast po stronie bin-builderów w konfiguracji config/builder.conf
w sekcji danego buildera:
notify_url = http://some-server.pl:1234/

